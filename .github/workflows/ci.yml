name: CI Build & Release (Multi-Arch OpenWrt)

permissions:
  contents: write

on:
  push:
    branches: [ master ]
    tags:     [ 'v*' ]
  workflow_dispatch:

jobs:
  build:
    name: Build (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            sdk: https://downloads.openwrt.org/releases/23.05.3/targets/x86/64/openwrt-sdk-23.05.3-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          - arch: armv7
            sdk: https://downloads.openwrt.org/releases/23.05.3/targets/armsr/armv7/openwrt-sdk-23.05.3-armsr-armv7_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz
          - arch: armv8
            sdk: https://downloads.openwrt.org/releases/23.05.3/targets/armsr/armv8/openwrt-sdk-23.05.3-armsr-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          - arch: mipsel
            sdk: https://downloads.openwrt.org/releases/23.05.3/targets/ramips/mt7621/openwrt-sdk-23.05.3-ramips-mt7621_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          - arch: mips
            sdk: https://downloads.openwrt.org/releases/23.05.3/targets/malta/be/openwrt-sdk-23.05.3-malta-be_gcc-12.3.0_musl.Linux-x86_64.tar.xz

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download OpenWrt SDK
        run: |
          set -e
          wget -q "${{ matrix.sdk }}" -O sdk.tar.xz
          tar -xJf sdk.tar.xz
          mv openwrt-sdk-* sdk

      - name: Build static binary
        run: |
          set -e
          TOOLCHAIN=$(find sdk/staging_dir/toolchain-* -type d -name bin)
          export PATH="$TOOLCHAIN:$PATH"
          # 自动探测交叉编译器前缀
          GCC_BIN=$(ls "$TOOLCHAIN"/*-gcc | head -n1)
          PREF=$(basename "$GCC_BIN" | sed 's/gcc$//')
          echo "Detected tool prefix: $PREF"
          ${PREF}gcc -Os -static -o wolserver-${{ matrix.arch }} wolserver.c
          ${PREF}strip wolserver-${{ matrix.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wolserver-${{ matrix.arch }}
          path: wolserver-${{ matrix.arch }}

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: List files
        run: ls -lR .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:   ${{ github.ref_name }}
          name:       Release ${{ github.ref_name }}
          files: |
            wolserver-x86_64/wolserver-x86_64
            wolserver-armv7/wolserver-armv7
            wolserver-armv8/wolserver-armv8
            wolserver-mipsel/wolserver-mipsel
            wolserver-mips/wolserver-mips
